@model LogFileReader.Models.LogFileDataModel

@{
    ViewData["Title"] = "List";
    var Direction = ViewContext.RouteData.Values["action"].ToString().StartsWith("Rev") ? "Reverse" : "Forward";
    var DisablePrev = Model.PageTop == LogFileDataModel.EOF;
    var DisableNext = Model.PageBottom == LogFileDataModel.EOF;
}

<style>
    td.wrap {
        word-break: break-all;
    }

    button:disabled {
        color: #999;
    }

    label {
        float: left;
        margin-top: 5px;
    }

    select.form-control {
        width: inherit;
    }
</style>

<h2>@Direction: @Html.Encode(Model.Id)</h2>

<div class="row">
    <form asp-controller="Log" asp-action="" method="post">
        <input type="hidden" name="PageTop" value="@Model.PageTop" />
        <input type="hidden" name="PageBottom" value="@Model.PageBottom" />
        <div class="col-xs-4">
            <label for="Count" style="float: left;">Show: </label>
            <select asp-for="Count" asp-items="@(new SelectList((List<int>)ViewData["CountOptions"]))" class="form-control"></select>
        </div>
        <div class="col-xs-8 text-right">
            <button asp-action="@(Direction + "First")" asp-controller="Home" asp-route-id="@Model.Id" class="btn btn-default" disabled="@DisablePrev">First</button>
            <button asp-action="@(Direction + "Prev")" asp-controller="Home" asp-route-id="@Model.Id" class="btn btn-default" disabled="@DisablePrev">Prev</button>
            <button asp-action="@(Direction + "Next")" asp-controller="Home" asp-route-id="@Model.Id" class="btn btn-default" disabled="@DisableNext">Next</button>
            <button asp-action="@(Direction + "Last")" asp-controller="Home" asp-route-id="@Model.Id" class="btn btn-default" disabled="@DisableNext">Last</button>
        </div>
    </form>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @if (!Html.ViewData.ModelState.IsValid)
        {
            <tr><td><div asp-validation-summary="ModelOnly" class="text-danger"></div></td></tr>
        }
        else
        {
            @foreach (var item in Model.Lines)
            {
                <tr>
                    <td class="wrap">@Html.DisplayFor(modelItem => item)</td>
                </tr>
            }
        }
    </tbody>
</table>
